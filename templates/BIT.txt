
// BIT
struct BIT {
    int n;
    vi bit;

    BIT(int n): n(n), bit(n+1, 0) {
    }

    int sum(int i) {
        int s = 0;
        while (i > 0) {
            s += bit[i];
            i -= i & -i;
        }
        return s;
    }

    void add(int i, int x) {
        while (i <= n) {
            bit[i] += x;
            i += i & -i;
        }
    }

    void range_add(BIT& bit1, int l, int r, int x) {
        add(l, -x * (l-1));
        bit1.add(l, x);
        add(r, x*r);
        bit1.add(r, -x);
    }

    int range_sum(BIT& bit1, int l, int r) {
        int res = sum(r) + bit1.sum(r) * r;
        res -= sum(l-1) + bit1.sum(l-1) * (l-1);
        return res;
    }
};
